---
- name: Install MariaDB Server and Python3 pymysql
  apt:
    name:
      - mariadb-server
      - python3-pymysql
    state: latest
  when: "'node1' in inventory_hostname"
  tags: install-mariadb

- name: Configure mysqld
  blockinfile:
    path: /etc/mysql/mariadb.conf.d/99-openstack.cnf
    create: yes
    block: |
      [mysqld]
      bind-address = {{ ip_controller }}

      default-storage-engine = innodb
      innodb_file_per_table = on
      max_connections = 4096
      collation-server = utf8_general_ci
      character-set-server = utf8
  when: "'node1' in inventory_hostname"
  tags: configure-mysqld

- name: Restart mysql
  service:
    name: mysql
    state: restarted
    enabled: yes
  when: "'node1' in inventory_hostname"
  tags: restart-mysql

- name: Mysql secure instalation - create script file
  file:
    path: /tmp/mysql-secure-instalation.sh
    state: touch
    mode: '0777'
  when: "'node1' in inventory_hostname"
  tags: mysql-secure-instalation

- name: Mysql secure instalation - configure script
  blockinfile:
    path: /tmp/mysql-secure-instalation.sh
    block: |
      #!/bin/bash
      #
      # Make sure that NOBODY can access the server without a password
      mysql -e "UPDATE mysql.user SET Password = {{ db_root_pass }}('CHANGEME') WHERE User = 'root'"
      # Kill the anonymous users
      mysql -e "DROP USER ''@'localhost'"
      # Because our hostname varies we'll use some Bash magic here.
      mysql -e "DROP USER ''@'$(hostname)'"
      # Kill off the demo database
      mysql -e "DROP DATABASE test"
      # Make our changes take effect
      mysql -e "FLUSH PRIVILEGES"
      # Any subsequent tries to run queries this way will get access denied because lack of usr/pwd param
      #
  when: "'node1' in inventory_hostname"
  tags: mysql-secure-instalation

- name: Mysql secure instalation - execute script
  shell: bash /tmp/mysql-secure-instalation.sh
  when: "'node1' in inventory_hostname"
  tags: mysql-secure-instalation

...
